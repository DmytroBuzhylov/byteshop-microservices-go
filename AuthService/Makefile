BINARY_NAME=auth_service
PROTO_SRC=proto
OUT_DIR=generated

PORT=50051
DB_URL=postgres://postgres:root@localhost:5432/BiteShop

build:
	@echo "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
	go build -o $(BINARY_NAME) ./cmd/main.go

run: build
	@echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
	./$(BINARY_NAME)

test:
	@echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	go test ./...

clean:
	@echo "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
	rm -f $(BINARY_NAME)

lint:
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º"
	golangci-lint run

docker-build:
	@echo "–°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞"
	docker build -t auth-service .

docker-run:
	@echo "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
	docker run -p $(PORT):$(PORT) -e DB_URL=$(DB_URL) auth-service

generate:
	@echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è gRPC-–∫–æ–¥–∞"
	mkdir -p $(OUT_DIR)/auth $(OUT_DIR)/product $(OUT_DIR)/order $(OUT_DIR)/payment $(OUT_DIR)/notification
	protoc --go_out=$(OUT_DIR)/auth --go-grpc_out=$(OUT_DIR)/auth $(PROTO_SRC)/auth.proto
	protoc --go_out=$(OUT_DIR)/product --go-grpc_out=$(OUT_DIR)/product $(PROTO_SRC)/product.proto
	protoc --go_out=$(OUT_DIR)/order --go-grpc_out=$(OUT_DIR)/order $(PROTO_SRC)/order.proto
	protoc --go_out=$(OUT_DIR)/payment --go-grpc_out=$(OUT_DIR)/payment $(PROTO_SRC)/payment.proto
	protoc --go_out=$(OUT_DIR)/notification --go-grpc_out=$(OUT_DIR)/notification $(PROTO_SRC)/notification.proto




help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make build        - –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
	@echo "  make run          - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
	@echo "  make test         - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  make clean        - –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
	@echo "  make lint         - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º"
	@echo "  make docker-build - –°–æ–±—Ä–∞—Ç—å Docker-–æ–±—Ä–∞–∑"
	@echo "  make docker-run   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
